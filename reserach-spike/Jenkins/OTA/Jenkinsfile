def built_module
def builder_name
def build_dir
def metadata
def kind
def update_name

import groovy.json.JsonOutput

pipeline {
    agent any
    stages {
        stage("Interactive_Input") {
            steps {
                script {
                    def userInput = input(
                        id: 'userInput', message: 'Enter the file name to be the build result and your first and last names:?',
                        parameters: [
                            string(defaultValue: '',
                                   description: 'module to be built',
                                   name: 'module'),
                            string(defaultValue: '',
                                   description: 'builder name',
                                   name: 'user'),
                        ])

                    built_module = userInput.module?:''
                    builder_name = userInput.user?:''

                    echo("Module to be built: ${built_module}")
                    echo("Builder name: ${builder_name}")
                }
            }
        }
        stage("The_Build") {
            steps {
                script {
                    // here the build script should be placed

                    // following the OTA DP specs
//                    kind = one of "control_view", "firmware", "apps", "libs"
//                    update_name = class_id or app's or lib's name
//                    metadata = [
//                        "file": "s3://strata-ota-updates-review-dev/" + ${built_module},
//                        "name": "not sure but looks like it's the same as update_name but may be different",
//                        "md5": "get check sum of the file created", should be done automatically
//                        "timestamp": "file-creation-date file:creation:time", should be done automatically
//                        "version": "value.from.build", should be done automatically
//                    ]

                    // below is just an example
                    // change parameters on yours programmatically, if some cannot be set from the code, use above section for the user input
                    build_dir = pwd() 
                    kind = '\\"apps\\"'
                    update_name = '\\"hcs\\"'
                    def meta = [
                        file: "s3://strata-ota-updates-review-dev/" + built_module,
                        name: "hcs",
                        md5: "a2d69a4c8a224afa77319cd3d833b292",
                        timestamp: "2019-11-04 17:16:48",
                        version: "1.0.0"
                    ]
                    metadata = JsonOutput.toJson(meta).replace('"', '\\"')
                }
            }
        }
        stage("Copy_to_S3_notify_server") {
            steps {
                script {
                    // needs to run in the dir where the built file is
                    dir(build_dir) {
                        // will work on aws instance only, for prod envirinment replace `dev` with `prod`
                        bat ("aws s3 cp ${built_module} s3://strata-ota-updates-review-dev/")
                        def cmd = 'curl --header "Content-Type:application/json" -X POST -d "{\\"username\\":\\"'+builder_name+'\\",' + kind +': {' +update_name +':' + metadata +'} }" https://dev-portal.strata.onsemi.com/api/v1/ota/'
//                      echo("cmd: ${cmd}")
                        bat cmd
                    }
                    echo("File uploaded, notification sent")
                }
            }
        }
    }
}

 
