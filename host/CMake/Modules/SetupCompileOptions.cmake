include(CheckCXXCompilerFlag)

if(UNIX)
    check_cxx_compiler_flag("-Wall" HAVE_WALL)
    if(HAVE_WALL)
        add_compile_options("-Wall")
    endif()

    check_cxx_compiler_flag("-Wextra" HAVE_WEXTRA)
    if(HAVE_WEXTRA)
        add_compile_options("-Wextra")
    endif()

    check_cxx_compiler_flag("-w" HAVE_W)
    if(HAVE_W)
        option(COMPILER_W "Inhibit all warning messages" OFF)
        add_feature_info(COMPILER_W COMPILER_W "Inhibit all warning messages")
        if(COMPILER_W)
            add_compile_options("-w")
        endif()
    endif()

    check_cxx_compiler_flag("-Werror" HAVE_WERROR)
    if(HAVE_WERROR)
        option(COMPILER_WERROR "Make all warnings into errors" OFF)
        add_feature_info(COMPILER_WERROR COMPILER_WERROR "Make all warnings into errors")
        if(COMPILER_WERROR)
            add_compile_options("-Werror")
        endif()
    endif()

    check_cxx_compiler_flag("-pipe" HAVE_PIPE)
    if(HAVE_PIPE)
        add_compile_options("-pipe")
    endif()

    check_cxx_compiler_flag("-Wno-c++98-compat" HAVE_CPP98_COMPAT)
    if(HAVE_CPP98_COMPAT)
        add_compile_options("-Wno-c++98-compat")
    endif()
endif()

option(COMPILER_QTMSGCTX "Provides additional information about a log message (Qt) - release only" ON)
add_feature_info(COMPILER_QTMSGCTX COMPILER_QTMSGCTX "Provides additional information about a log message (Qt)")
if(COMPILER_QTMSGCTX)
    add_compile_definitions($<$<CONFIG:Release>:QT_MESSAGELOGCONTEXT>)
endif()

if(WIN32)
    add_compile_definitions(WIN32_LEAN_AND_MEAN)
endif()
