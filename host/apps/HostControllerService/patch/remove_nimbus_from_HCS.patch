diff --git a/host/HostControllerService/CMakeLists.txt b/host/HostControllerService/CMakeLists.txt
index d545d9c..9ec4992 100644
--- a/host/HostControllerService/CMakeLists.txt
+++ b/host/HostControllerService/CMakeLists.txt
@@ -12,8 +12,6 @@ endif()
 
 if(LINUX)
 SET(CMAKE_CXX_FLAGS "-v -std=c++11")
-SET(CMAKE_C_COMPILER "clang")
-SET(CMAKE_CXX_COMPILER "clang++")
 endif()
 
 
@@ -23,22 +21,22 @@ set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "lib/")
 
 ############# cloud integration
 # Required headers
-set(NIMBUS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../cloud/")
-set(CB_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../cloud/couchbase-lite-core")
-set(CB_LIB_DIR "${CB_DIR}/build_cmake/unix")
-set(SHARED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../shared")
-message (${CB_LIB_DIR})
+#set(NIMBUS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../cloud/")
+#set(CB_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../cloud/couchbase-lite-core")
+#set(CB_LIB_DIR "${CB_DIR}/build_cmake/unix")
+#set(SHARED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../shared")
+#message (${CB_LIB_DIR})
 include_directories( ${CMAKE_CURRENT_SOURCE_DIR}
           "${CMAKE_CURRENT_SOURCE_DIR}/include"
-          "${SHARED_DIR}/cpp-base64"    #cpp-base64 submodule
-          "${SHARED_DIR}/rapidjson/include"   #rapidjson submodule
-          "${CB_DIR}/C"
-          "${CB_DIR}/C/include"
-          "${CB_DIR}/vendor/fleece/Fleece"
-          "${CB_DIR}/LiteCore/Database"
-          "${CB_DIR}/build_cmake/unix"
-          "${CB_LIB_DIR}"
-          "${NIMBUS_DIR}"
+          #"${SHARED_DIR}/cpp-base64"    #cpp-base64 submodule
+          #"${SHARED_DIR}/rapidjson/include"   #rapidjson submodule
+          #"${CB_DIR}/C"
+          #"${CB_DIR}/C/include"
+          #"${CB_DIR}/vendor/fleece/Fleece"
+          #"${CB_DIR}/LiteCore/Database"
+          #"${CB_DIR}/build_cmake/unix"
+          #"${CB_LIB_DIR}"
+          #"${NIMBUS_DIR}"
           )
 
 find_library(litecore NAMES
@@ -54,8 +52,8 @@ include_directories(lib/ArduinoJson)
 if(LINUX) 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../lib/linux/include)
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../lib/linux/include/event2)
-#link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../lib/linux/lib/event2)
-#link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../lib/linux/lib)
+link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../lib/linux/lib/event2)
+link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../lib/linux/lib)
 endif()
 
 set(SOURCE
@@ -66,8 +64,8 @@ set(SOURCE
    ${CMAKE_CURRENT_SOURCE_DIR}/src/HostControllerService.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/startHostControllerService.cpp
    #${CMAKE_CURRENT_SOURCE_DIR}/src/Observer.cpp
-   ${SHARED_DIR}/cpp-base64/base64.cpp
-   ${NIMBUS_DIR}/nimbus.cc
+   #${SHARED_DIR}/cpp-base64/base64.cpp
+   #${NIMBUS_DIR}/nimbus.cc
 )
 
 add_library(usbconnector STATIC ${CMAKE_CURRENT_SOURCE_DIR}/src/USBConnector.cpp)
@@ -92,6 +90,6 @@ target_link_libraries(HCS
                       -lpthread
                       -levent
                       -lserialport
-                      ${litecore} ${libdl}
+                      #${litecore} ${libdl}
                      )
 endif()
diff --git a/host/HostControllerService/lib/HostControllerService.h b/host/HostControllerService/lib/HostControllerService.h
index 8171b7b..2c17eb4 100644
--- a/host/HostControllerService/lib/HostControllerService.h
+++ b/host/HostControllerService/lib/HostControllerService.h
@@ -12,7 +12,7 @@
 #include "ArduinoJson.h"
 #include <libserialport.h>
 // NIMBUS integration **Needs better organisation --Prasanth** 
-#include "Observer.h"
+//#include "Observer.h"
  
 #ifndef LIB_HOSTCONTROLLERSERVICE_H_
 #define LIB_HOSTCONTROLLERSERVICE_H_
diff --git a/host/HostControllerService/src/HostControllerService.cpp b/host/HostControllerService/src/HostControllerService.cpp
index 920f819..618d163 100644
--- a/host/HostControllerService/src/HostControllerService.cpp
+++ b/host/HostControllerService/src/HostControllerService.cpp
@@ -6,19 +6,19 @@
  */
 
 #include "HostControllerService.h"
-#include "nimbus.h"
+//#include "nimbus.h"
 
 using namespace std;
 
-AttachmentObserver::AttachmentObserver(void *hostP) {
-	host = (host_packet *)hostP;
-}
-
-void AttachmentObserver::ValidateDocumentCallback(jsonString jsonBody) {
-	 Connector::messageProperty message;
-     message.message = jsonBody;
-     host->service->sendNotification(message,host->notify);    
-}
+//AttachmentObserver::AttachmentObserver(void *hostP) {
+//	host = (host_packet *)hostP;
+//}
+//
+//void AttachmentObserver::ValidateDocumentCallback(jsonString jsonBody) {
+//	 Connector::messageProperty message;
+//     message.message = jsonBody;
+//     host->service->sendNotification(message,host->notify);    
+//}
 
 HostControllerService::HostControllerService(string ipRouter,string ipPub) {
 
@@ -294,14 +294,14 @@ string HostControllerService::setupHostControllerService(string ipRouter, string
 	Connector *conp = conObj->getServiceTypeObject("PLATFORM");
 	hostP.platform = conp;
 
-	// cloud integration
-	// Initialize Nimbus object
-    Nimbus local_db = Nimbus();
-// Use the test database to observe
-    local_db.Open(NIMBUS_TEST_PLATFORM_JSON);
-    // NIMBUS integration **Needs better organisation --Prasanth** 
-	AttachmentObserver blobObserver((void *)&hostP);
-	local_db.Register(&blobObserver);
+//	// cloud integration
+//	// Initialize Nimbus object
+//    Nimbus local_db = Nimbus();
+//// Use the test database to observe
+//    local_db.Open(NIMBUS_TEST_PLATFORM_JSON);
+//    // NIMBUS integration **Needs better organisation --Prasanth** 
+//	AttachmentObserver blobObserver((void *)&hostP);
+//	local_db.Register(&blobObserver);
 
 
 	string cmd = "{\"cmd\":\"request_platform_id\",\"Host_OS\":\"Linux\"}";
