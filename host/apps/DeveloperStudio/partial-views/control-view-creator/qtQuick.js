/* 
    This File contains portions of snippets.json that exists in https://github.com/ThomasVogelpohl/vsc-qml-snippets/blob/master/snippets/snippets.json
    This File is the base for mapping the auto complete, For CVC purposes this files auto complete will be limited in the number of QtQuick Objects but 
    detailed in the properties

    If we need to add more QtQuick Objects the format will be
    {
        "body": "{\n   \n}",
        "description": "",
        "prefix": "",
        "scope": "source.qml",
        "properties": ["",""]
    }
*/
const qtQuick = [
    {
        "body": "Axis {\n //id: \n}",
        "description": "Axis",
        "prefix": "Axis",
        "scope": "source.qml",
        "properties": ["buttons: ", "inputs: ", "scale: ","value: ","velocity: "]
    },
    {
        "body": "Binding {\n //id: \n}",
        "description": "Binding",
        "prefix": "Binding",
        "scope": "source.qml",
        "properties": ["delayed: ","property: ","target: ","value: ","when: "]
    },
    {
        "body": "BusyIndicator {\n //id: \n}",
        "description": "BusyIndicator",
        "prefix": "BusyIndicator",
        "scope": "source.qml",
        "properties": [
            "running: ",
            "availableHeight: ",
            "availableWidth: ",
            "background: ",
            "bottomInset: ",
            "bottomPadding: ",
            "contentItem: ",
            "focusPolicy: ",
            "focusReason: ",
            "font: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: "
        ]
    },
    {
        "body": "BusyIndicatorStyle {\n //id: \n}",
        "description": "BusyIndicatorStyle",
        "prefix": "BusyIndicatorStyle",
        "scope": "source.qml",
        "properties": ["control: ", "indicator: "]
    },
    {
        "body": "Button {\n //id: \n}",
        "description": "Button",
        "prefix": "Button",
        "scope": "source.qml",
        "properties": [
            "flat: ",
            "highlighted: ",
            "checkable: ",
            "checked: ",
            "display: ",
            "down: ",
            "icon.color: ",
            "icon.height: ",
            "icon.name: ",
            "icon.source: ",
            "icon.width: ",
            "indicator: ",
            "pressX: ",
            "pressY: ",
            "pressed: ",
            "text: ",
            "canceled()",
            "clicked()",
            "doubleClicked()",
            "pressAndHold()",
            "pressed()",
            "released()",
            "toggled()",
            "availableHeight: ",
            "availableWidth: ",
            "background: ",
            "bottomInset: ",
            "bottomPadding: ",
            "contentItem: ",
            "focusPolicy: ",
            "focusReason: ",
            "font: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
        ]
    },
    {
        "body": "ButtonAxisInput {\n //id: \n}",
        "description": "ButtonAxisInput",
        "prefix": "ButtonAxisInput",
        "scope": "source.qml",
        "properties": ["acceleration: ","buttons: ","deceleration: ","scale: "]
    },
    {
        "body": "ButtonGroup {\n //id: \n}",
        "description": "ButtonGroup",
        "prefix": "ButtonGroup",
        "scope": "source.qml",
        "properties": ["buttons: ","checkState: ","checkedButtons: ","exclusive: ","objectName: "]
    },
    {
        "body": "ButtonStyle {\n //id: \n}",
        "description": "ButtonStyle",
        "prefix": "ButtonStyle",
        "scope": "source.qml",
        "properties": ["background: ","control: ","label: "]
    },
    {
        "body": "Canvas {\n //id: \n}",
        "description": "Canvas",
        "prefix": "Canvas",
        "scope": "source.qml",
        "properties": [
            "available: ",
            "canvasSize: ",
            "context: ",
            "contextType: ",
            "renderStrategy: ",
            "renderTarget: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: "
        ]
    },
    {
        "body": "CheckBox {\n //id: \n}",
        "description": "CheckBox",
        "prefix": "CheckBox",
        "scope": "source.qml",
        "properties": [
            "checkState: ",
            "nextCheckState: ",
            "tristate: ",
            "action: ",
            "autoExclusive: ",
            "autoRepeat: ",
            "autoRepeatDelay: ",
            "autoRepeatInterval: ",
            "checkable: ",
            "checked: ",
            "display: ",
            "down: ",
            "icon.color: ",
            "icon.height: ",
            "icon.name: ",
            "icon.source: ",
            "icon.width: ",
            "implicitIndicatorHeight: ",
            "implicitIndicatorWidth: ",
            "indicator: ",
            "pressX: ",
            "pressY: ",
            "pressed: ",
            "text: ",
            "canceled()",
            "clicked()",
            "doubleClicked()",
            "pressAndHold()",
            "pressed()",
            "released()",
            "toggled()",
            "availableHeight: ",
            "availableWidth: ",
            "background: ",
            "bottomInset: ",
            "bottomPadding: ",
            "contentItem: ",
            "focusPolicy: ",
            "focusReason: ",
            "font: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "implicitBackgroundHeight: ",
            "implicitBackgroundWidth: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
        ]
    },
    {
        "body": "CheckBoxStyle {\n //id: \n}",
        "description": "CheckBoxStyle",
        "prefix": "CheckBoxStyle",
        "scope": "source.qml",
        "properties": ["background: ","control: ","indicator: ","label: ","spacing: "]
    },
    {
        "body": "CheckDelegate {\n //id: \n}",
        "description": "CheckDelegate",
        "prefix": "CheckDelegate",
        "scope": "source.qml",
        "properties": [
            "checkState: ",
            "nextCheckState: ",
            "tristate: ",
            "action: ",
            "autoExclusive: ",
            "autoRepeat: ",
            "autoRepeatDelay: ",
            "autoRepeatInterval: ",
            "checkable: ",
            "checked: ",
            "display: ",
            "down: ",
            "icon.color: ",
            "icon.height: ",
            "icon.name: ",
            "icon.source: ",
            "icon.width: ",
            "implicitIndicatorHeight: ",
            "implicitIndicatorWidth: ",
            "indicator: ",
            "pressX: ",
            "pressY: ",
            "pressed: ",
            "text: ",
            "canceled()",
            "clicked()",
            "doubleClicked()",
            "pressAndHold()",
            "pressed()",
            "released()",
            "toggled()",
            "availableHeight: ",
            "availableWidth: ",
            "background: ",
            "bottomInset: ",
            "bottomPadding: ",
            "contentItem: ",
            "focusPolicy: ",
            "focusReason: ",
            "font: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "implicitBackgroundHeight: ",
            "implicitBackgroundWidth: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
        ]
    },
    {
        "body": "Column {\n //id: \n}",
        "description": "Column",
        "prefix": "Column",
        "scope": "source.qml",
        "properties": [
            "add: ",
            "bottomPadding: ",
            "leftPadding: ",
            "move: ",
            "padding: ",
            "populate: ",
            "rightPadding: ",
            "spacing: ",
            "topPadding: ",
            "forceLayout()",
            "positioningComplete()",
            "active: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: ",
        ]
    },
    {
        "body": "ColumnLayout {\n //id: \n}",
        "description": "ColumnLayout",
        "prefix": "ColumnLayout",
        "scope": "source.qml",
        "properties": [
            "layoutDirection: ",
            "spacing: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect: ",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: "
        ]
    },
    {
        "body": "ComboBox {\n //id: \n}",
        "description": "ComboBox",
        "prefix": "ComboBox",
        "scope": "source.qml",
        "properties": [
            "acceptableInput: ",
            "count: ",
            "currentIndex: ",
            "currentText: ",
            "displayText: ",
            "down: ",
            "editText: ",
            "editable: ",
            "flat: ",
            "highlightedIndex: ",
            "indicator: ",
            "inputMethodComposing: ",
            "inputMethodHints: ",
            "model: ",
            "popup: ",
            "pressed: ",
            "textRole: ",
            "validator: ",
            "availableHeight: ",
            "availableWidth: ",
            "background: ",
            "bottomInset: ",
            "bottomPadding: ",
            "contentItem: ",
            "focusPolicy: ",
            "focusReason: ",
            "font: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "implicitBackgroundHeight: ",
            "implicitBackgroundWidth: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: "
        ]
    },
    {
        "body": "Component",
        "description": "Component",
        "prefix": "Component",
        "scope": "source.qml",
        "properties": ["progress: ","status: ","url: ","onCompleted{}","onDestruction{}"]
    },
    {
        "body": "Connections {\n //id: \n}",
        "description": "Connections",
        "prefix": "Connections",
        "scope": "source.qml",
        "properties": ["enabled: ","ignoreUnknownSignals: ","target: "]
    },
    {
        "body": "Container {\n //id: \n}",
        "description": "Container",
        "prefix": "Container",
        "scope": "source.qml",
        "properties": [
            "contentChildren: ",
            "contentData: ",
            "contentHeight: ",
            "contentModel: ",
            "contentWidth: ",
            "count: ",
            "currentIndex: ",
            "currentItem: ",
            "availableHeight: ",
            "availableWidth: ",
            "background: ",
            "bottomInset: ",
            "bottomPadding: ",
            "contentItem: ",
            "focusPolicy: ",
            "focusReason: ",
            "font: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "implicitBackgroundHeight: ",
            "implicitBackGroundWidth: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baseLineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
        ]
    },
    {
        "body": "Date",
        "description": "Date",
        "prefix": "Date",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "DropShadow {\n //id: \n}",
        "description": "DropShadow",
        "prefix": "DropShadow",
        "scope": "source.qml",
        "properties": [
            "cached: ",
            "horizontalPadding: ",
            "hoverEnabled: ",
            "hovered: ",
            "implicitBackgroundHeight: ",
            "implicitBackGroundWidth: ",
            "leftInset: ",
            "leftPadding: ",
            "locale: ",
            "mirrored: ",
            "padding: ",
            "palette: ",
            "rightInset: ",
            "rightPadding: ",
            "spacing: ",
            "topInset: ",
            "topPadding: ",
            "verticalPadding: ",
            "visualFocus: ",
            "wheelEnabled: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baseLineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
        ]
    },
    {
        "body": "Grid {\n //id: \n}",
        "description": "Grid",
        "prefix": "Grid",
        "scope": "source.qml",
        "properties": [
            "columns: ",
            "effectiveHorizontalItemAlignment: ",
            "effectiveLayoutDirection: ",
            "flow: ",
            "horizontalItemAlignment: ",
            "layoutDirection: ",
            "leftPadding: ",
            "move: ",
            "padding: ",
            "populate: ",
            "rightPadding: ",
            "rowSpacing: ",
            "rows: ",
            "spacing: ",
            "topPadding: ",
            "verticalItemAlignment: ",
            "forceLayout()",
            "positioningComplete()",
            "active: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: ",
        ]  
    },
    {
        "body": "GridLayout {\n //id: \n}",
        "description": "GridLayout",
        "prefix": "GridLayout",
        "scope": "source.qml",
        "properties": [
            "columnSpacing: ",
            "columns: ",
            "flow: ",
            "layoutDirection: ",
            "rowSpacing: ",
            "rows: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "anchors",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "childrenRect: ",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: "
        ]        
    },
    {
        "body": "GridView {\n //id: \n}",
        "description": "GridView",
        "prefix": "GridView",
        "scope": "source.qml",
        "properties": [
            "add: ",
            "addDisplaced: ",
            "cacheBuffer: ",
            "cellHeight: ",
            "cellWidth: ",
            "count: ",
            "currentIndex: ",
            "currentItem: ",
            "onDelayremove: ",
            "delegate: ",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: "
        ]
    },
    {
        "body": "Icon {\n //id: \n}",
        "description": "Icon",
        "prefix": "Icon",
        "scope": "source.qml",
        "properties": ["icon: ","parameters: ","plugin: "]
    },
    {
        "body": "Image {\n //id: \n}",
        "description": "Image",
        "prefix": "Image",
        "scope": "source.qml",
        "properties": [
            "asynchronous: ",
            "autoTransform: ",
            "cache: ",
            "fillMode: ",
            "horizontalAlignment: ",
            "mipmap: ",
            "mirror: ",
            "paintedHeight: ",
            "paintedWidth: ",
            "progress: ",
            "smooth: ",
            "source: ",
            "sourceSize: ",
            "status: ",
            "verticalAlignment: ",
            "activeFocus: ",
            "activeFocusOnTab: ",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: "
        ]
    },
    {
        "body": "Item {\n //id: \n}",
        "description": "Item",
        "prefix": "Item",
        "scope": "source.qml",
        "properties": [
            "activeFocus: ",
            "activeFocusOnTab: ",
            "antialiasing: ",
            "baselineOffset: ",
            "children: ",
            "clip: ",
            "containmentMask: ",
            "data: ",
            "enabled: ",
            "focus: ",
            "height: ",
            "implicitHeight: ",
            "implicitWidth: ",
            "opacity: ",
            "parent: ",
            "resources: ",
            "rotation: ",
            "scale: ",
            "smooth: ",
            "state: ",
            "states: ",
            "transform: ",
            "transformOrigin: ",
            "transitions: ",
            "visible: ",
            "visibleChildren: ",
            "width: ",
            "x: ",
            "y: ",
            "z: ",
            "objectName: "
        ]
    },
    {
        "body": "Label {\n //id: \n}",
        "description": "Label",
        "prefix": "Label",
        "scope": "source.qml",
        "properties": [
            "background: ",
            "bottomInset: ",
            "implicitBackgroundHeight: ",
            "implicitBackgroundWidth: ",
            "leftInset: ",
            "palette: ",
            "rightInset: ",
            "topInset: ",
            "advance: ",
            "baseUrl: ",
            "bottomPadding: ",
            "clip: ",
            "color: ",
            "contentHeight: ",
            "contentWidth: ",
            "effectiveHorizontalAlignment: ",
            "elide: ",
            "fontInfo.bold: ",
            "fontInfo.family: ",
            "fontInfo.italic: ",
            "fontInfo.pixelSize: ",
            "fontInfo.pointSize: ",
            "fontInfo.styleName: ",
            "fontInfo.weight: ",
            "fontSizeMode: ",
            "horizontalAlignment: ",
            "hoveredLink: ",
            "leftPadding: ",
            "lineCount: ",
            "lineHeight: ",
            "lineHeightMode: ",
            "linkColor: ",
            "maximumLineCount: ",
            "minimumPixelSize: ",
            "minimumPointSize: ",
            "padding: ",
            "renderType: ",
            "rightPadding: ",
            "style: ",
            "styleColor: ",
            "text: ",
            "textFormat: ",
            "topPadding: ",
            "truncated: ",
            "verticalAlignment: ",
            "wrapMode: ",
            "forceLayout()",
            "lineLaidOut()",
            "linkActivated()",
            "linkAt()",
            "linkHovered()"
        ]
    },
    {
        "body": "Layout",
        "description": "Layout",
        "prefix": "Layout",
        "scope": "source.qml",
        "properties": ["preferredHeight: ", "preferredWidth: ", "minimumWidth: ", "maximumWidth: ","minimumHeight","maximumHeight: ","alignment: ","fillWidth: ","fillHeight: "]
    },
    {
        "body": "ListElement {\n //id: \n}",
        "description": "ListElement",
        "prefix": "ListElement",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "ListModel {\n //id: \n}",
        "description": "ListModel",
        "prefix": "ListModel",
        "scope": "source.qml",
        "properties": [
            "count: ",
            "dynamicRoles: ",
            "append(jsobjectdict)",
            "clear()",
            "insert(intindex,jsobjectdict)",
            "move(intfrom,intto,intn)",
            "remove(intindex,intcount=1)",
            "set(intindex,jsobjectdict)",
            "setProperty(intindex,stringproperty,variantvalue)",
            "sync()",
        ]
    },
    {
        "body": "ListView {\n //id: \n}",
        "description": "ListView",
        "prefix": "ListView",
        "scope": "source.qml",
        "properties": ["add: ","addDisplaced: ","cacheBuffer: ","count: ","currentIndex: ","currentItem: ","currentSection: ","onDelayremove: ","delegate: ","displaced: ","displayMarginBeginning: ","displayMarginEnd: ","effectiveLayoutDirection: ","footer: ","footerItem: ","footerPositioning: ","header: ","headerItem: ","headerPositioning: ","highlight: ","highlightFollowsCurrentItem: ","highlightItem: ","highlightMoveDuration: ","highlightMoveVelocity: ","highlightRangeMode: ","highlightResizeDuration: ","highlightResizeVelocity: ","onIsCurrentItem: ","keyNavigationEnabled: ","keyNavigationWraps: ","layoutDirection: ","model: ","move: ","moveDisplaced: ","onNextSection: ","orientation: ","populate: ","preferredHighlightBegin: ","preferredHighlightEnd: ","onPrevioussection: ","remove: ","removeDisplaced: ","onSection: ","snapMode: ","spacing: ","verticalLayoutDirection: ","onView: ","onAdd: ","decrementCurrentIndex()","forceLayout()","incrementCurrentIndex()","positionViewAtBeginning()","positionViewAtEnd()","positionViewAtIndex(intindex,PositionModemode)","onRemove: ","atXBeginning: ","atXEnd: ","atYBeginning: ","atYEnd: ","bottomMargin: ","boundsBehavior: ","boundsMovement: ","contentHeight: ","contentItem: ","contentWidth: ","contentX: ","contentY: ","dragging: ","draggingHorizontally: ","draggingVertically: ","flickDeceleration: ","flickableDirection: ","flicking: ","flickingHorizontally: ","flickingVertically: ","horizontalOvershoot: ","horizontalVelocity: ","interactive: ","leftMargin: ","maximumFlickVelocity: ","moving: ","movingHorizontally: ","movingVertically: ","originX: ","originY: ","pixelAligned: ","pressDelay: ","rebound: ","rightMargin: ","synchronousDrag: ","topMargin: ","verticalOvershoot: ","verticalVelocity: ","visibleArea.heightRatio: ","visibleArea.widthRatio: ","visibleArea.xPosition: ","visibleArea.yPosition: ","cancelFlick()","flick(qrealxVelocity,qrealyVelocity)","flickEnded()","flickStarted()","movementEnded()","movementStarted()","resizeContent(realwidth,realheight,QPointFcenter)","returnToBounds()\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "Loader {\n //id: \n}",
        "description": "Loader",
        "prefix": "Loader",
        "scope": "source.qml",
        "properties": ["  //active: bool\n    //asynchronous: bool\n    //item: object\n    //progress: real\n    //source: url\n    //sourceComponent: Component\n    //status: enumeration\n    //loaded()\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "Menu {\n //id: \n}",
        "description": "Menu",
        "prefix": "Menu",
        "scope": "source.qml",
        "properties": [" //cascade: bool\n    //contentData: list<Object>\n    //contentModel: model\n    //count: int\n    //currentIndex: int\n    //delegate: Component\n    //overlap: real\n    //title: string\n    //activeFocus: bool\n    //anchors.centerIn: Object\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomMargin: real\n    //bottomPadding: real\n    //clip: bool\n    //closePolicy: enumeration\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentItem: Item\n    //contentWidth: real\n    //dim: bool\n    //enabled: bool\n    //enter: Transition\n    //exit: Transition\n    //focus: bool\n    //font: font\n    //height: real\n    //horizontalPadding: real\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //leftInset: real\n    //leftMargin: real\n    //leftPadding: real\n    //locale: Locale\n    //margins: real\n    //mirrored: bool\n    //modal: bool\n    //opacity: real\n    //opened: bool\n    //padding: real\n    //palette: palette\n    //parent: Item\n    //rightInset: real\n    //rightMargin: real\n    //rightPadding: real\n    //scale: real\n    //spacing: real\n    //topInset: real\n    //topMargin: real\n    //topPadding: real\n    //transformOrigin: enumeration\n    //verticalPadding: real\n    //visible: bool\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //forceActiveFocus(reason=Qt.OtherFocusReason)\n    //objectName: string"]
    },
    {
        "body": "MenuBar {\n //id: \n}",
        "description": "MenuBar",
        "prefix": "MenuBar",
        "scope": "source.qml",
        "properties": [" //contentHeight: real\n    //contentWidth: real\n    //delegate: Component\n    //menus: list<Menu>\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentModel: model\n    //contentWidth: real\n    //count: int\n    //currentIndex: int\n    //currentItem: Item\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "MenuBarItem {\n //id: \n}",
        "description": "MenuBarItem",
        "prefix": "MenuBarItem",
        "scope": "source.qml",
        "properties": ["   //highlighted: bool\n    //menu: Menu\n    //menuBar: Menu\n    //action: Action\n    //autoExclusive: bool\n    //autoRepeat: bool\n    //autoRepeatDelay: int\n    //autoRepeatInterval: int\n    //checkable: bool\n    //checked: bool\n    //display: enumeration\n    //down: bool\n    //icon.color: color\n    //icon.height: int\n    //icon.name: string\n    //icon.source: url\n    //icon.width: int\n    //implicitIndicatorHeight: real\n    //implicitIndicatorWidth: real\n    //indicator: Item\n    //pressX: real\n    //pressY: real\n    //pressed: bool\n    //text: string\n    //canceled()\n    //clicked()\n    //doubleClicked()\n    //pressAndHold()\n    //pressed()\n    //released()\n    //toggled()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "MenuItem {\n //id: \n}",
        "description": "MenuItem",
        "prefix": "MenuItem",
        "scope": "source.qml",
        "properties": ["//arrow: Item\n    //highlighted: bool\n    //menu: Menu\n    //subMenu: Menu\n    //action: Action\n    //autoExclusive: bool\n    //autoRepeat: bool\n    //autoRepeatDelay: int\n    //autoRepeatInterval: int\n    //checkable: bool\n    //checked: bool\n    //display: enumeration\n    //down: bool\n    //icon.color: color\n    //icon.height: int\n    //icon.name: string\n    //icon.source: url\n    //icon.width: int\n    //implicitIndicatorHeight: real\n    //implicitIndicatorWidth: real\n    //indicator: Item\n    //pressX: real\n    //pressY: real\n    //pressed: bool\n    //text: string\n    //canceled()\n    //clicked()\n    //doubleClicked()\n    //pressAndHold()\n    //pressed()\n    //released()\n    //toggled()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "MenuSeparator {\n //id: \n}",
        "description": "MenuSeparator",
        "prefix": "MenuSeparator",
        "scope": "source.qml",
        "properties": ["   //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "MenuStyle {\n //id: \n}",
        "description": "MenuStyle",
        "prefix": "MenuStyle",
        "scope": "source.qml",
        "properties": [" //font: font\n    //frame: Component\n    //itemDelegate: Object\n    //scrollIndicator: Component\n    //separator: Component\n    //submenuOverlap: int\n    //submenuPopupDelay: int"]
    },
    {
        "body": "MouseArea {\n //id: \n}",
        "description": "MouseArea",
        "prefix": "MouseArea",
        "scope": "source.qml",
        "properties": [" //acceptedButtons: Qt: : MouseButtons\n    //containsMouse: bool\n    //containsPress: bool\n    //cursorShape: Qt: : CursorShape\n    //drag.active: bool\n    //drag.axis: enumeration\n    //drag.filterChildren: bool\n    //drag.maximumX: real\n    //drag.maximumY: real\n    //drag.minimumX: real\n    //drag.minimumY: real\n    //drag.target: Item\n    //drag.threshold: real\n    //enabled: bool\n    //hoverEnabled: bool\n    //mouseX: real\n    //mouseY: real\n    //pressAndHoldInterval: int\n    //pressed: bool\n    //pressedButtons: MouseButtons\n    //preventStealing: bool\n    //propagateComposedEvents: bool\n    //scrollGestureEnabled: bool\n    //canceled()\n    //clicked(MouseEventmouse)\n    //doubleClicked(MouseEventmouse)\n    //entered()\n    //exited()\n    //positionChanged(MouseEventmouse)\n    //pressAndHold(MouseEventmouse)\n    //pressed(MouseEventmouse)\n    //released(MouseEventmouse)\n    //wheel(WheelEventwheel)\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "Number",
        "description": "Number",
        "prefix": "Number",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "Popup {\n //id: \n}",
        "description": "Popup",
        "prefix": "Popup",
        "scope": "source.qml",
        "properties": ["//activeFocus: bool\n    //anchors.centerIn: Object\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomMargin: real\n    //bottomPadding: real\n    //clip: bool\n    //closePolicy: enumeration\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentItem: Item\n    //contentWidth: real\n    //dim: bool\n    //enabled: bool\n    //enter: Transition\n    //exit: Transition\n    //focus: bool\n    //font: font\n    //height: real\n    //horizontalPadding: real\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //leftInset: real\n    //leftMargin: real\n    //leftPadding: real\n    //locale: Locale\n    //margins: real\n    //mirrored: bool\n    //modal: bool\n    //opacity: real\n    //opened: bool\n    //padding: real\n    //palette: palette\n    //parent: Item\n    //rightInset: real\n    //rightMargin: real\n    //rightPadding: real\n    //scale: real\n    //spacing: real\n    //topInset: real\n    //topMargin: real\n    //topPadding: real\n    //transformOrigin: enumeration\n    //verticalPadding: real\n    //visible: bool\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //forceActiveFocus(reason=Qt.OtherFocusReason)\n    //objectName: string"]
    },
    {
        "body": "Qt",
        "description": "Qt",
        "prefix": "Qt",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "QtObject {\n //id: \n}",
        "description": "QtObject",
        "prefix": "QtObject",
        "scope": "source.qml",
        "properties": ["objectName: "]
    },
    {
        "body": "QtPositioning {\n //id: \n}",
        "description": "QtPositioning",
        "prefix": "QtPositioning",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "RadioButton {\n //id: \n}",
        "description": "RadioButton",
        "prefix": "RadioButton",
        "scope": "source.qml",
        "properties": ["  //action: Action\n    //autoExclusive: bool\n    //autoRepeat: bool\n    //autoRepeatDelay: int\n    //autoRepeatInterval: int\n    //checkable: bool\n    //checked: bool\n    //display: enumeration\n    //down: bool\n    //icon.color: color\n    //icon.height: int\n    //icon.name: string\n    //icon.source: url\n    //icon.width: int\n    //implicitIndicatorHeight: real\n    //implicitIndicatorWidth: real\n    //indicator: Item\n    //pressX: real\n    //pressY: real\n    //pressed: bool\n    //text: string\n    //canceled()\n    //clicked()\n    //doubleClicked()\n    //pressAndHold()\n    //pressed()\n    //released()\n    //toggled()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "RangeSlider {\n //id: \n}",
        "description": "RangeSlider",
        "prefix": "RangeSlider",
        "scope": "source.qml",
        "properties": ["//first.handle: Item\n    //first.hovered: bool\n    //first.implicitHandleHeight: real\n    //first.implicitHandleWidth: real\n    //first.position: real\n    //first.pressed: bool\n    //first.value: real\n    //first.visualPosition: real\n    //from: real\n    //horizontal: bool\n    //live: bool\n    //orientation: enumeration\n    //second.handle: Item\n    //second.hovered: bool\n    //second.implicitHandleHeight: real\n    //second.implicitHandleWidth: real\n    //second.position: real\n    //second.pressed: bool\n    //second.value: real\n    //second.visualPosition: real\n    //snapMode: enumeration\n    //stepSize: real\n    //to: real\n    //touchDragThreshold: qreal\n    //vertical: bool\n    //voidfirst.decrease()\n    //voidfirst.increase()\n    //voidsecond.decrease()\n    //voidsecond.increase()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "Rectangle {\n //id: \n}",
        "description": "Rectangle",
        "prefix": "Rectangle",
        "scope": "source.qml",
        "properties": ["//antialiasing: bool\n    //border.color: color\n    //border.width: int\n    //color: color\n    //gradient: any\n    //radius: real\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "RegExpValidator {\n //id: \n}",
        "description": "RegExpValidator",
        "prefix": "RegExpValidator",
        "scope": "source.qml",
        "properties": ["regExp: "]
    },
    {
        "body": "Repeater {\n //id: \n}",
        "description": "Repeater",
        "prefix": "Repeater",
        "scope": "source.qml",
        "properties": ["//count: int\n    //delegate: Component\n    //model: any\n    //itemAdded(intindex,Itemitem)\n    //itemRemoved(intindex,Itemitem)\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "Rotation {\n //id: \n}",
        "description": "Rotation",
        "prefix": "Rotation",
        "scope": "source.qml",
        "properties": ["angle: ","axis.x","axis.y","axis.z","origin.x","origin.y"]
    },
    {
        "body": "Row {\n //id: \n}",
        "description": "Row",
        "prefix": "Row",
        "scope": "source.qml",
        "properties": ["//add: Transition\n    //bottomPadding: real\n    //effectiveLayoutDirection: enumeration\n    //layoutDirection: enumeration\n    //leftPadding: real\n    //move: Transition\n    //padding: real\n    //populate: Transition\n    //rightPadding: real\n    //spacing: real\n    //topPadding: real\n    //forceLayout()\n    //positioningComplete()\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "RowLayout {\n //id: \n}",
        "description": "RowLayout",
        "prefix": "RowLayout",
        "scope": "source.qml",
        "properties": ["//layoutDirection: enumeration\n    //spacing: real\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "Scale {\n //id: \n}",
        "description": "Scale",
        "prefix": "Scale",
        "scope": "source.qml",
        "properties": ["//origin.x: real\n    //origin.y: real\n    //xScale: real\n    //yScale: real"]
    },
    {
        "body": "ScrollBar {\n //id: \n}",
        "description": "ScrollBar",
        "prefix": "ScrollBar",
        "scope": "source.qml",
        "properties": ["   //active: bool\n    //onHorizontal : Scrollb: { }\n    //horizontal: bool\n    //interactive: bool\n    //minimumSize: real\n    //orientation: enumeration\n    //policy: enumeration\n    //position: real\n    //pressed: bool\n    //size: real\n    //snapMode: enumeration\n    //stepSize: real\n    //onVertical : Scrollb: { }\n    //vertical: bool\n    //visualPosition: real\n    //visualSize: real\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "ScrollIndicator {\n //id: \n}",
        "description": "ScrollIndicator",
        "prefix": "ScrollIndicator",
        "scope": "source.qml",
        "properties": ["   //active: bool\n    //onHorizontal : Scrollindicat: { }\n    //horizontal: bool\n    //minimumSize: real\n    //orientation: enumeration\n    //position: real\n    //size: real\n    //onVertical : Scrollindicat: { }\n    //vertical: bool\n    //visualPosition: real\n    //visualSize: real\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "ScrollView {\n //id: \n}",
        "description": "ScrollView",
        "prefix": "ScrollView",
        "scope": "source.qml",
        "properties": ["   //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentWidth: real\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "Settings {\n //id: \n}",
        "description": "Settings",
        "prefix": "Settings",
        "scope": "source.qml",
        "properties": ["category: ", "fileName: ","setValue(key,value)"]
    },
    {
        "body": "Slider {\n //id: \n}",
        "description": "Slider",
        "prefix": "Slider",
        "scope": "source.qml",
        "properties": ["  //from: real\n    //handle: Item\n    //horizontal: bool\n    //implicitHandleHeight: real\n    //implicitHandleWidth: real\n    //live: bool\n    //orientation: enumeration\n    //position: real\n    //pressed: bool\n    //snapMode: enumeration\n    //stepSize: real\n    //to: real\n    //touchDragThreshold: qreal\n    //value: real\n    //vertical: bool\n    //visualPosition: real\n    //moved()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "SplitView {\n //id: \n}",
        "description": "SplitView",
        "prefix": "SplitView",
        "scope": "source.qml",
        "properties": ["//handleDelegate: Component\n    //orientation: int\n    //resizing: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "Stack {\n //id: \n}",
        "description": "Stack",
        "prefix": "Stack",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "StackLayout {\n //id: \n}",
        "description": "StackLayout",
        "prefix": "StackLayout",
        "scope": "source.qml",
        "properties": ["   //count: int\n    //currentIndex: int\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "StackView {\n //id: \n}",
        "description": "StackView",
        "prefix": "StackView",
        "scope": "source.qml",
        "properties": ["//busy: bool\n    //currentItem: Item\n    //depth: int\n    //empty: bool\n    //onIndex : I: { }\n    //initialItem: var\n    //popEnter: Transition\n    //popExit: Transition\n    //pushEnter: Transition\n    //pushExit: Transition\n    //replaceEnter: Transition\n    //replaceExit: Transition\n    //onStatus : Enumerati: { }\n    //onView : Stackvi: { }\n    //onVisible : Bo: { }\n    //onActivated: { }\n    //onActivating: { }\n    //onDeactivated: { }\n    //onDeactivating: { }\n    //onRemoved: { }\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "State {\n //id: \n}",
        "description": "State",
        "prefix": "State",
        "scope": "source.qml",
        "properties": ["  //changes: list<Change>\n    //extend: string\n    //name: string\n    //when: bool"]
    },
    {
        "body": "String",
        "description": "String",
        "prefix": "String",
        "scope": "source.qml",
        "properties": []
    },
    {
        "body": "Switch {\n //id: \n}",
        "description": "Switch",
        "prefix": "Switch",
        "scope": "source.qml",
        "properties": ["  //position: real\n    //visualPosition: real\n    //action: Action\n    //autoExclusive: bool\n    //autoRepeat: bool\n    //autoRepeatDelay: int\n    //autoRepeatInterval: int\n    //checkable: bool\n    //checked: bool\n    //display: enumeration\n    //down: bool\n    //icon.color: color\n    //icon.height: int\n    //icon.name: string\n    //icon.source: url\n    //icon.width: int\n    //implicitIndicatorHeight: real\n    //implicitIndicatorWidth: real\n    //indicator: Item\n    //pressX: real\n    //pressY: real\n    //pressed: bool\n    //text: string\n    //canceled()\n    //clicked()\n    //doubleClicked()\n    //pressAndHold()\n    //pressed()\n    //released()\n    //toggled()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "Tab {\n //id: \n}",
        "description": "Tab",
        "prefix": "Tab",
        "scope": "source.qml",
        "properties": ["   //title: string\n    //active: bool\n    //asynchronous: bool\n    //item: object\n    //progress: real\n    //source: url\n    //sourceComponent: Component\n    //status: enumeration\n    //loaded()\n    //setSource()"]
    },
    {
        "body": "TabBar {\n //id: \n}",
        "description": "TabBar",
        "prefix": "TabBar",
        "scope": "source.qml",
        "properties": ["  //contentHeight: real\n    //contentWidth: real\n    //onIndex : I: { }\n    //onPosition : Enumerati: { }\n    //position: enumeration\n    //onTabbar : Tabb: { }\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentModel: model\n    //contentWidth: real\n    //count: int\n    //currentIndex: int\n    //currentItem: Item\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "TabButton {\n //id: \n}",
        "description": "TabButton",
        "prefix": "TabButton",
        "scope": "source.qml",
        "properties": ["//action: Action\n    //autoExclusive: bool\n    //autoRepeat: bool\n    //autoRepeatDelay: int\n    //autoRepeatInterval: int\n    //checkable: bool\n    //checked: bool\n    //display: enumeration\n    //down: bool\n    //icon.color: color\n    //icon.height: int\n    //icon.name: string\n    //icon.source: url\n    //icon.width: int\n    //implicitIndicatorHeight: real\n    //implicitIndicatorWidth: real\n    //indicator: Item\n    //pressX: real\n    //pressY: real\n    //pressed: bool\n    //text: string\n    //canceled()\n    //clicked()\n    //doubleClicked()\n    //pressAndHold()\n    //pressed()\n    //released()\n    //toggled()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "TabView {\n //id: \n}",
        "description": "TabView",
        "prefix": "TabView",
        "scope": "source.qml",
        "properties": ["//contentItem: Item\n    //count: int\n    //currentIndex: int\n    //frameVisible: bool\n    //tabPosition: int\n    //tabsVisible: bool"]
    },
    {
        "body": "TableView {\n //id: \n}",
        "description": "TableView",
        "prefix": "TableView",
        "scope": "source.qml",
        "properties": ["  //currentRow: int\n    //itemDelegate: Component\n    //model: model\n    //rowCount: int\n    //section.criteria: enumeration\n    //section.delegate: Component\n    //section.labelPositioning: enumeration\n    //section.property: string\n    //selection: Selection\n    //activated(introw)\n    //clicked(introw)\n    //doubleClicked(introw)\n    //pressAndHold(introw)\n    //contentItem: Item\n    //flickableItem: Item\n    //frameVisible: bool\n    //highlightOnFocus: bool\n    //horizontalScrollBarPolicy: enumeration\n    //style: Component\n    //verticalScrollBarPolicy: enumeration\n    //viewport: Item"]
    },
    {
        "body": "Text {\n //id: \n}",
        "description": "Text",
        "prefix": "Text",
        "scope": "source.qml",
        "properties": ["//advance: size\n    //baseUrl: url\n    //bottomPadding: real\n    //clip: bool\n    //color: color\n    //contentHeight: real\n    //contentWidth: real\n    //effectiveHorizontalAlignment: enumeration\n    //elide: enumeration\n    //font.bold: bool\n    //font.capitalization: enumeration\n    //font.family: string\n    //font.hintingPreference: enumeration\n    //font.italic: bool\n    //font.kerning: bool\n    //font.letterSpacing: real\n    //font.pixelSize: int\n    //font.pointSize: real\n    //font.preferShaping: bool\n    //font.strikeout: bool\n    //font.styleName: string\n    //font.underline: bool\n    //font.weight: enumeration\n    //font.wordSpacing: real\n    //fontInfo.bold: bool\n    //fontInfo.family: string\n    //fontInfo.italic: bool\n    //fontInfo.pixelSize: string\n    //fontInfo.pointSize: real\n    //fontInfo.styleName: string\n    //fontInfo.weight: int\n    //fontSizeMode: enumeration\n    //horizontalAlignment: enumeration\n    //hoveredLink: string\n    //leftPadding: real\n    //lineCount: int\n    //lineHeight: real\n    //lineHeightMode: enumeration\n    //linkColor: color\n    //maximumLineCount: int\n    //minimumPixelSize: int\n    //minimumPointSize: int\n    //padding: real\n    //renderType: enumeration\n    //rightPadding: real\n    //style: enumeration\n    //styleColor: color\n    //text: string\n    //textFormat: enumeration\n    //topPadding: real\n    //truncated: bool\n    //verticalAlignment: enumeration\n    //wrapMode: enumeration\n    //doLayout()(obsolete)\n    //forceLayout()\n    //lineLaidOut(objectline)\n    //linkActivated(stringlink)\n    //linkAt(realx,realy)\n    //linkHovered(stringlink)\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "TextArea {\n //id: \n}",
        "description": "TextArea",
        "prefix": "TextArea",
        "scope": "source.qml",
        "properties": ["//background: Item\n    //bottomInset: real\n    //onFlickable : Textar: { }\n    //focusReason: enumeration\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //leftInset: real\n    //palette: palette\n    //placeholderText: string\n    //placeholderTextColor: color\n    //rightInset: real\n    //topInset: real\n    //pressAndHold(MouseEventevent)\n    //pressed(MouseEventevent)\n    //released(MouseEventevent)\n    //activeFocusOnPress: bool\n    //baseUrl: url\n    //bottomPadding: real\n    //canPaste: bool\n    //canRedo: bool\n    //canUndo: bool\n    //color: color\n    //contentHeight: real\n    //contentWidth: real\n    //cursorDelegate: Component\n    //cursorPosition: int\n    //cursorRectangle: rectangle\n    //cursorVisible: bool\n    //effectiveHorizontalAlignment: enumeration\n    //font.bold: bool\n    //font.capitalization: enumeration\n    //font.family: string\n    //font.hintingPreference: enumeration\n    //font.italic: bool\n    //font.kerning: bool\n    //font.letterSpacing: real\n    //font.pixelSize: int\n    //font.pointSize: real\n    //font.preferShaping: bool\n    //font.strikeout: bool\n    //font.styleName: string\n    //font.underline: bool\n    //font.weight: enumeration\n    //font.wordSpacing: real\n    //horizontalAlignment: enumeration\n    //hoveredLink: string\n    //inputMethodComposing: bool\n    //inputMethodHints: enumeration\n    //leftPadding: real\n    //length: int\n    //lineCount: int\n    //mouseSelectionMode: enumeration\n    //overwriteMode: bool\n    //padding: real\n    //persistentSelection: bool\n    //preeditText: string\n    //readOnly: bool\n    //renderType: enumeration\n    //rightPadding: real\n    //selectByKeyboard: bool\n    //selectByMouse: bool\n    //selectedText: string\n    //selectedTextColor: color\n    //selectionColor: color\n    //selectionEnd: int\n    //selectionStart: int\n    //tabStopDistance: real\n    //text: string\n    //textDocument: TextDocument\n    //textFormat: enumeration\n    //textMargin: real\n    //topPadding: real\n    //verticalAlignment: enumeration\n    //wrapMode: enumeration\n    //append()\n    //clear()\n    //copy()\n    //cut()\n    //deselect()\n    //editingFinished()\n    //getFormattedText()\n    //getText()\n    //insert()\n    //isRightToLeft()\n    //linkActivated()\n    //linkAt()\n    //linkHovered()\n    //moveCursorSelection()\n    //paste()\n    //positionAt()\n    //positionToRectangle()\n    //redo()\n    //remove()\n    //select()\n    //selectAll()\n    //selectWord()\n    //undo()"]
    },
    {
        "body": "TextEdit {\n //id: \n}",
        "description": "TextEdit",
        "prefix": "TextEdit",
        "scope": "source.qml",
        "properties": ["  //activeFocusOnPress: bool\n    //baseUrl: url\n    //bottomPadding: real\n    //canPaste: bool\n    //canRedo: bool\n    //canUndo: bool\n    //color: color\n    //contentHeight: real\n    //contentWidth: real\n    //cursorDelegate: Component\n    //cursorPosition: int\n    //cursorRectangle: rectangle\n    //cursorVisible: bool\n    //effectiveHorizontalAlignment: enumeration\n    //font.bold: bool\n    //font.capitalization: enumeration\n    //font.family: string\n    //font.hintingPreference: enumeration\n    //font.italic: bool\n    //font.kerning: bool\n    //font.letterSpacing: real\n    //font.pixelSize: int\n    //font.pointSize: real\n    //font.preferShaping: bool\n    //font.strikeout: bool\n    //font.styleName: string\n    //font.underline: bool\n    //font.weight: enumeration\n    //font.wordSpacing: real\n    //horizontalAlignment: enumeration\n    //hoveredLink: string\n    //inputMethodComposing: bool\n    //inputMethodHints: enumeration\n    //leftPadding: real\n    //length: int\n    //lineCount: int\n    //mouseSelectionMode: enumeration\n    //overwriteMode: bool\n    //padding: real\n    //persistentSelection: bool\n    //preeditText: string\n    //readOnly: bool\n    //renderType: enumeration\n    //rightPadding: real\n    //selectByKeyboard: bool\n    //selectByMouse: bool\n    //selectedText: string\n    //selectedTextColor: color\n    //selectionColor: color\n    //selectionEnd: int\n    //selectionStart: int\n    //tabStopDistance: real\n    //text: string\n    //textDocument: TextDocument\n    //textFormat: enumeration\n    //textMargin: real\n    //topPadding: real\n    //verticalAlignment: enumeration\n    //wrapMode: enumeration\n    //clear()\n    //copy()\n    //cut()\n    //deselect()\n    //editingFinished()\n    //insert(intposition,stringtext)\n    //isRightToLeft(intstart,intend)\n    //linkActivated(stringlink)\n    //linkAt(realx,realy)\n    //linkHovered(stringlink)\n    //moveCursorSelection(intposition,SelectionModemode=TextEdit.SelectCharacters)\n    //paste()\n    //redo()\n    //select(intstart,intend)\n    //selectAll()\n    //selectWord()\n    //undo()\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "TextField{\n \n}",
        "description": "TextField",
        "prefix": "TextField",
        "scope": "source.qml",
        "properties": ["//background: Item\n    //bottomInset: real\n    //focusReason: enumeration\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //leftInset: real\n    //palette: palette\n    //placeholderText: string\n    //placeholderTextColor: color\n    //rightInset: real\n    //topInset: real\n    //pressAndHold(MouseEventevent)\n    //pressed(MouseEventevent)\n    //released(MouseEventevent)\n    //acceptableInput: bool\n    //activeFocusOnPress: bool\n    //autoScroll: bool\n    //bottomPadding: real\n    //canPaste: bool\n    //canRedo: bool\n    //canUndo: bool\n    //color: color\n    //contentHeight: real\n    //contentWidth: real\n    //cursorDelegate: Component\n    //cursorPosition: int\n    //cursorRectangle: rectangle\n    //cursorVisible: bool\n    //displayText: string\n    //echoMode: enumeration\n    //effectiveHorizontalAlignment: enumeration\n    //font.bold: bool\n    //font.capitalization: enumeration\n    //font.family: string\n    //font.hintingPreference: enumeration\n    //font.italic: bool\n    //font.kerning: bool\n    //font.letterSpacing: real\n    //font.pixelSize: int\n    //font.pointSize: real\n    //font.preferShaping: bool\n    //font.strikeout: bool\n    //font.styleName: string\n    //font.underline: bool\n    //font.weight: enumeration\n    //font.wordSpacing: real\n    //horizontalAlignment: enumeration\n    //inputMask: string\n    //inputMethodComposing: bool\n    //inputMethodHints: enumeration\n    //leftPadding: real\n    //length: int\n    //maximumLength: int\n    //mouseSelectionMode: enumeration\n    //overwriteMode: bool\n    //padding: real\n    //passwordCharacter: string\n    //passwordMaskDelay: int\n    //persistentSelection: bool\n    //preeditText: string\n    //readOnly: bool\n    //renderType: enumeration\n    //rightPadding: real\n    //selectByMouse: bool\n    //selectedText: string\n    //selectedTextColor: color\n    //selectionColor: color\n    //selectionEnd: int\n    //selectionStart: int\n    //text: string\n    //topPadding: real\n    //validator: Validator\n    //verticalAlignment: enumeration\n    //wrapMode: enumeration\n    //accepted()\n    //clear()\n    //copy()\n    //cut()\n    //deselect()\n    //editingFinished()\n    //ensureVisible()\n    //getText()\n    //insert()\n    //isRightToLeft()\n    //moveCursorSelection()\n    //paste()\n    //positionAt()\n    //positionToRectangle()\n    //redo()\n    //remove()\n    //select()\n    //selectAll()\n    //selectWord()\n    //textEdited()\n    //undo()"]
    },
    {
        "body": "TextInput {\n //id: \n}",
        "description": "TextInput",
        "prefix": "TextInput",
        "scope": "source.qml",
        "properties": ["    //acceptableInput: bool\n    //activeFocusOnPress: bool\n    //autoScroll: bool\n    //bottomPadding: real\n    //canPaste: bool\n    //canRedo: bool\n    //canUndo: bool\n    //color: color\n    //contentHeight: real\n    //contentWidth: real\n    //cursorDelegate: Component\n    //cursorPosition: int\n    //cursorRectangle: rectangle\n    //cursorVisible: bool\n    //displayText: string\n    //echoMode: enumeration\n    //effectiveHorizontalAlignment: enumeration\n    //font.bold: bool\n    //font.capitalization: enumeration\n    //font.family: string\n    //font.hintingPreference: enumeration\n    //font.italic: bool\n    //font.kerning: bool\n    //font.letterSpacing: real\n    //font.pixelSize: int\n    //font.pointSize: real\n    //font.preferShaping: bool\n    //font.strikeout: bool\n    //font.styleName: string\n    //font.underline: bool\n    //font.weight: enumeration\n    //font.wordSpacing: real\n    //horizontalAlignment: enumeration\n    //inputMask: string\n    //inputMethodComposing: bool\n    //inputMethodHints: enumeration\n    //leftPadding: real\n    //length: int\n    //maximumLength: int\n    //mouseSelectionMode: enumeration\n    //overwriteMode: bool\n    //padding: real\n    //passwordCharacter: string\n    //passwordMaskDelay: int\n    //persistentSelection: bool\n    //preeditText: string\n    //readOnly: bool\n    //renderType: enumeration\n    //rightPadding: real\n    //selectByMouse: bool\n    //selectedText: string\n    //selectedTextColor: color\n    //selectionColor: color\n    //selectionEnd: int\n    //selectionStart: int\n    //text: string\n    //topPadding: real\n    //validator: Validator\n    //verticalAlignment: enumeration\n    //wrapMode: enumeration\n    //accepted()\n    //clear()\n    //copy()\n    //cut()\n    //deselect()\n    //editingFinished()\n    //ensureVisible(intposition)\n    //insert(intposition,stringtext)\n    //isRightToLeft(intstart,intend)\n    //moveCursorSelection(intposition,SelectionModemode=TextInput.SelectCharacters)\n    //paste()\n    //redo()\n    //remove(intstart,intend)\n    //select(intstart,intend)\n    //selectAll()\n    //selectWord()\n    //textEdited()\n    //undo()\n    //\n    //\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt(realx,realy)\n    //forceActiveFocus()\n    //forceActiveFocus(Qt: : FocusReasonreason)\n    //nextItemInFocusChain(boolforward)\n    //objectName: string"]
    },
    {
        "body": "TextMetrics {\n //id: \n}",
        "description": "TextMetrics",
        "prefix": "TextMetrics",
        "scope": "source.qml",
        "properties": ["   //advanceWidth: real\n    //boundingRect: rect\n    //elide: enumeration\n    //elideWidth: real\n    //elidedText: string\n    //font: font\n    //height: real\n    //text: string\n    //tightBoundingRect: rect\n    //width: real"]
    },
    {
        "body": "Timer {\n //id: \n}",
        "description": "Timer",
        "prefix": "Timer",
        "scope": "source.qml",
        "properties": ["  //interval: int\n    //repeat: bool\n    //running: bool\n    //triggeredOnStart: bool\n    //restart()\n    //start()\n    //stop()\n    //triggered()"]
    },
    {
        "body": "ToggleButton {\n //id: \n}",
        "description": "ToggleButton",
        "prefix": "ToggleButton",
        "scope": "source.qml",
        "properties": ["   //isDefault: bool\n    //menu: Menu"]
    },
    {
        "body": "ToolBar {\n //id: \n}",
        "description": "ToolBar",
        "prefix": "ToolBar",
        "scope": "source.qml",
        "properties": ["   //position: enumeration\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentWidth: real\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "ToolBarStyle {\n //id: \n}",
        "description": "ToolBarStyle",
        "prefix": "ToolBarStyle",
        "scope": "source.qml",
        "properties": ["   //background: Component\n    //menuButton: Component\n    //panel: Component"]
    },
    {
        "body": "ToolButton {\n //id: \n}",
        "description": "ToolButton",
        "prefix": "ToolButton",
        "scope": "source.qml",
        "properties": ["  //flat: bool\n    //highlighted: bool\n    //action: Action\n    //autoExclusive: bool\n    //autoRepeat: bool\n    //autoRepeatDelay: int\n    //autoRepeatInterval: int\n    //checkable: bool\n    //checked: bool\n    //display: enumeration\n    //down: bool\n    //icon.color: color\n    //icon.height: int\n    //icon.name: string\n    //icon.source: url\n    //icon.width: int\n    //implicitIndicatorHeight: real\n    //implicitIndicatorWidth: real\n    //indicator: Item\n    //pressX: real\n    //pressY: real\n    //pressed: bool\n    //text: string\n    //canceled()\n    //clicked()\n    //doubleClicked()\n    //pressAndHold()\n    //pressed()\n    //released()\n    //toggled()\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "ToolSeparator {\n //id: \n}",
        "description": "ToolSeparator",
        "prefix": "ToolSeparator",
        "scope": "source.qml",
        "properties": ["   //horizontal: bool\n    //orientation: enumeration\n    //vertical: bool\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomPadding: real\n    //contentItem: Item\n    //focusPolicy: enumeration\n    //focusReason: enumeration\n    //font: font\n    //horizontalPadding: real\n    //hoverEnabled: bool\n    //hovered: bool\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //leftInset: real\n    //leftPadding: real\n    //locale: Locale\n    //mirrored: bool\n    //padding: real\n    //palette: palette\n    //rightInset: real\n    //rightPadding: real\n    //spacing: real\n    //topInset: real\n    //topPadding: real\n    //verticalPadding: real\n    //visualFocus: bool\n    //wheelEnabled: bool\n    //activeFocus: bool\n    //activeFocusOnTab: bool\n    //anchors.alignWhenCentered: bool\n    //anchors.baseline: AnchorLine\n    //anchors.baselineOffset: real\n    //anchors.bottom: AnchorLine\n    //anchors.bottomMargin: real\n    //anchors.centerIn: Item\n    //anchors.fill: Item\n    //anchors.horizontalCenter: AnchorLine\n    //anchors.horizontalCenterOffset: real\n    //anchors.left: AnchorLine\n    //anchors.leftMargin: real\n    //anchors.margins: real\n    //anchors.right: AnchorLine\n    //anchors.rightMargin: real\n    //anchors.top: AnchorLine\n    //anchors.topMargin: real\n    //anchors.verticalCenter: AnchorLine\n    //anchors.verticalCenterOffset: real\n    //antialiasing: bool\n    //baselineOffset: int\n    //children: list<Item>\n    //childrenRect.height: real\n    //childrenRect.width: real\n    //childrenRect.x: real\n    //childrenRect.y: real\n    //clip: bool\n    //containmentMask: QObject*\n    //data: list<Object>\n    //enabled: bool\n    //focus: bool\n    //height: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //layer.effect: Component\n    //layer.enabled: bool\n    //layer.format: enumeration\n    //layer.mipmap: bool\n    //layer.samplerName: string\n    //layer.samples: enumeration\n    //layer.smooth: bool\n    //layer.sourceRect: rect\n    //layer.textureMirroring: enumeration\n    //layer.textureSize: size\n    //layer.wrapMode: enumeration\n    //opacity: real\n    //parent: Item\n    //resources: list<Object>\n    //rotation: real\n    //scale: real\n    //smooth: bool\n    //state: string\n    //states: list<State>\n    //transform: list<Transform>\n    //transformOrigin: enumeration\n    //transitions: list<Transition>\n    //visible: bool\n    //visibleChildren: list<Item>\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //childAt()\n    //contains()\n    //forceActiveFocus()\n    //forceActiveFocus()\n    //grabToImage()\n    //mapFromGlobal()\n    //mapFromItem()\n    //mapFromItem()\n    //mapToGlobal()\n    //mapToItem()\n    //mapToItem()\n    //nextItemInFocusChain()"]
    },
    {
        "body": "ToolTip {\n //id: \n}",
        "description": "ToolTip",
        "prefix": "ToolTip",
        "scope": "source.qml",
        "properties": ["//onDelay : I: { }\n    //delay: int\n    //onText : Stri: { }\n    //text: string\n    //onTimeout : I: { }\n    //timeout: int\n    //onTooltip : Toolt: { }\n    //onVisible : Bo: { }\n    //onVoid Hide: { }\n    //onVoid Show(String Text,  Int Timeout = -: { }\n    //activeFocus: bool\n    //anchors.centerIn: Object\n    //availableHeight: real\n    //availableWidth: real\n    //background: Item\n    //bottomInset: real\n    //bottomMargin: real\n    //bottomPadding: real\n    //clip: bool\n    //closePolicy: enumeration\n    //contentChildren: list<Item>\n    //contentData: list<Object>\n    //contentHeight: real\n    //contentItem: Item\n    //contentWidth: real\n    //dim: bool\n    //enabled: bool\n    //enter: Transition\n    //exit: Transition\n    //focus: bool\n    //font: font\n    //height: real\n    //horizontalPadding: real\n    //implicitBackgroundHeight: real\n    //implicitBackgroundWidth: real\n    //implicitContentHeight: real\n    //implicitContentWidth: real\n    //implicitHeight: real\n    //implicitWidth: real\n    //leftInset: real\n    //leftMargin: real\n    //leftPadding: real\n    //locale: Locale\n    //margins: real\n    //mirrored: bool\n    //modal: bool\n    //opacity: real\n    //opened: bool\n    //padding: real\n    //palette: palette\n    //parent: Item\n    //rightInset: real\n    //rightMargin: real\n    //rightPadding: real\n    //scale: real\n    //spacing: real\n    //topInset: real\n    //topMargin: real\n    //topPadding: real\n    //transformOrigin: enumeration\n    //verticalPadding: real\n    //visible: bool\n    //width: real\n    //x: real\n    //y: real\n    //z: real\n    //forceActiveFocus(reason=Qt.OtherFocusReason)\n    //objectName: string"]
    },
    {
        "body": "Window {\n //id: \n}",
        "description": "Window",
        "prefix": "Window",
        "scope": "source.qml",
        "properties": [" //onActive : Bo: { }\n    //active: bool\n    //onActivefocusitem : It: { }\n    //activeFocusItem: Item\n    //color: color\n    //contentItem: Item\n    //onContentitem : It: { }\n    //contentOrientation: Qt: : ScreenOrientation\n    //data: list<Object>\n    //flags: Qt: : WindowFlags\n    //height: int\n    //onHeight : I: { }\n    //maximumHeight: int\n    //maximumWidth: int\n    //minimumHeight: int\n    //minimumWidth: int\n    //modality: Qt: : WindowModality\n    //opacity: real\n    //screen: variant\n    //title: string\n    //onVisibility : Qwindow::Visibili: { }\n    //visibility: QWindow: : Visibility\n    //visible: bool\n    //width: int\n    //onWidth : I: { }\n    //onWindow : Wind: { }\n    //x: int\n    //y: int\n    //alert(intmsec)\n    //close()\n    //closing(CloseEventclose)\n    //hide()\n    //lower()\n    //raise()\n    //requestActivate()\n    //show()\n    //showFullScreen()\n    //showMaximized()\n    //showMinimized()\n    //showNormal()"]
    },
]

const qtQuickBody = [
{
        "body": "property alias ${1:name}: ${2:val}\n",
        "description": "QML property alias",
        "prefix": "alias",
        "scope": "source.qml"
    },
    {
        "body": "\nanchors.${1}: ${2:parent}.${3}\n",
        "description": "(simple)",
        "prefix": "anchors",
        "scope": "source.qml",
        "properties":["margins: ","left: ","right: ","top: ","bottom: ","verticalCenter: ","horizontalCenter: ","fill: ","centerIn: "]
    },
    {
        "body": "anchors: {\n \n}",
        "description": "(all sides)",
        "prefix": "anchors",
        "scope": "source.qml",
        "properties":["margins: ","left: ","right: ","top: ","bottom: ","verticalCenter: ","horizontalCenter: ","fill: ","centerIn: "]
    },
    {
        "body": "bool",
        "description": "bool",
        "prefix": "bool",
        "scope": "source.qml"
    },
   {
        "body": "color",
        "description": "color",
        "prefix": "color",
        "scope": "source.qml"
    },
    {
        "body": "console.${1}",
        "description": "console",
        "prefix": "console",
        "scope": "source.js",
        "properties": ["log(\"${1:}: \")", "debug(\"${1:}: \")","info(\"${1:}: \")","warn(\"${1:}: \")","error(\"${1:}: \")"]
    },
    {
        "body": "coordinate",
        "description": "coordinate",
        "prefix": "coordinate",
        "scope": "source.qml"
    },
    {
        "body": "date",
        "description": "date",
        "prefix": "date",
        "scope": "source.qml"
    },
    {
        "body": "defaulr",
        "description": "default",
        "prefix": "default",
        "scope": "source.qml"
    },
    {
        "body": "double",
        "description": "double",
        "prefix": "double",
        "scope": "source.qml"
    },
    {
        "body": "enumeration",
        "description": "enumeration",
        "prefix": "enumeration",
        "scope": "source.qml"
    },
    {
        "body": "font",
        "description": "font",
        "prefix": "font",
        "scope": "source.qml",
        "properties":["bold","capitalization","family","italic","pixelSize","pointSize","spacing","underline"]
    },
    {
        "body": "function ${1:function_name}(${2:argument}) {\n    ${0:// body...}\n}",
        "description": "function() {}",
        "prefix": "function",
        "scope": "source.qml"
    },
    {
        "body": "geocircle",
        "description": "geocircle",
        "prefix": "geocircle",
        "scope": "source.qml"
    },
    {
        "body": "geopath",
        "description": "geopath",
        "prefix": "geopath",
        "scope": "source.qml"
    },
    {
        "body": "geopolygon",
        "description": "geopolygon",
        "prefix": "geopolygon",
        "scope": "source.qml"
    },
    {
        "body": "georectangle",
        "description": "georectangle",
        "prefix": "georectangle",
        "scope": "source.qml"
    },
    {
        "body": "geoshape",
        "description": "geoshape",
        "prefix": "geoshape",
        "scope": "source.qml"
    },
    {
        "body": "id: ",
        "description": "id",
        "prefix": "id",
        "scope": "source.qml"
    },
    {
        "body": "int",
        "description": "int",
        "prefix": "int",
        "scope": "source.qml"
    },
    {
        "body": "\nLayout.fillHeight: ${1:true}\n",
        "description": "height",
        "prefix": "layout.fillHeight",
        "scope": "source.qml"
    },
    {
        "body": "\nLayout.fillWidth: ${1:true}\n",
        "description": "width",
        "prefix": "layout.fillWidth",
        "scope": "source.qml"
    },
    {
        "body": "list{\n    \n}",
        "description": "list",
        "prefix": "list",
        "scope": "source.qml"
    },
    {
        "body": "palette",
        "description": "palette",
        "prefix": "palette",
        "scope": "source.qml"
    },
    {
        "body": "point{\n //x: 0\n //y: 0 \n}",
        "description": "point",
        "prefix": "point",
        "scope": "source.qml"
    },
    {
        "body": "property ${1:var} ${2:name}\n",
        "description": "QML property",
        "prefix": "property",
        "scope": "source.qml"
    },
    {
        "body": "real",
        "description": "real",
        "prefix": "real",
        "scope": "source.qml"
    },
    {
        "body": "rect{\n  //x: 0\n //y: 0  \n}",
        "description": "rect",
        "prefix": "rect",
        "scope": "source.qml"
    },
    {
        "body": "size",
        "description": "size",
        "prefix": "size",
        "scope": "source.qml"
    },
    {
        "body": "string",
        "description": "string",
        "prefix": "string",
        "scope": "source.qml"
    },
    {
        "body": "url",
        "description": "url",
        "prefix": "url",
        "scope": "source.qml"
    },
    {
        "body": "var",
        "description": "var",
        "prefix": "var",
        "scope": "source.qml"
    },
    {
        "body": "variant",
        "description": "variant",
        "prefix": "variant",
        "scope": "source.qml"
    },
    {
        "body": "vector2d",
        "description": "vector2d",
        "prefix": "vector2d",
        "scope": "source.qml"
    },
    {
        "body": "vector3d",
        "description": "vector3d",
        "prefix": "vector3d",
        "scope": "source.qml"
    },
]
