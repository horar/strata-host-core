//----
// Core Framework
//
// WARNING : DO NOT EDIT THIS FILE UNLESS YOU ARE ON THE CORE FRAMEWORK TEAM
//
//  Platform Implementation is done in PlatformInterface.h/cpp files
//
//

#ifndef CORE_INTERFACE_H
#define CORE_INTERFACE_H

#include <QObject>
#include <iterator>
#include <QString>
#include <QKeyEvent>
#include <QDebug>
#include <QJsonObject>
#include <QJsonDocument>
#include <QVariant>
#include <QStringList>
#include <QString>
#include <QJsonArray>
#include <string>
#include <thread>
#include <map>
#include <functional>
#include <stdlib.h>
#include <string>

typedef std::function<void(QJsonObject)> NotificationHandler; // notification handler
typedef std::function<void(QJsonObject)> DataSourceHandler; // data source handler accepting QJsonObject

class CoreInterface : public QObject
{
    Q_OBJECT

public:
    explicit CoreInterface(QObject *parent = nullptr) : QObject(parent)
    {
        qDebug() << "CoreInterface::CoreInterfaceQObject *parent) : QObject(parent) CTOR\n";
    }

    virtual ~CoreInterface() {
        qDebug() << "CoreInterface::~CoreInterface() DTOR\n";
    }

signals:

private:

};


#endif // CORE_INTERFACE

